In order to work with more than just a few numbers, we’ll need to load from and store to memory. This exercise requires you to write the values corresponding to the ASCII characters ABCDEFGHIJKLMNOPQRSTUVWXY to a location in memory, and then print it out.Recall that ASCII is simply a standard for how to represent particular characters as byte values. If you can write the correct byte value for a letter to the correct memory location, you have achieved your goal. Also note that the MARS environment has some awareness of ASCII, so literal characters like 'A' can be used in place of corresponding integer or hexadecimal values like 65 and 0x41 respectively. You could obviously just write these directly to the data segment using a directive, but we would like you to write to heap memory using a loop to store the correct characters.

Your first step will be to identify an appropriate address in the heap segment of memory using the MARS development environment. Once you have a heap memory address, feel free to hardcode this in your program, then loop as need to fill an appropriate amount of space with the correct characters.

Finally, you will need to use a syscall to print the values. Don’t forget the null terminator!